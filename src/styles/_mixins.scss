// Variables
$minWidth: 320;
$maxWidth: 1920;
$maxWidthContainer: 1280;

$bodyBgColor: linear-gradient(180deg, #010208 16.39%, #010206 20.51%, #040008 24.79%, #010101 30.46%, #010101 34.11%, #010101 36.21%, #010101 100%);
$textColorPrimary: #FFFFFF;
$textColorSecondary: #EFDEDE;
$textRedColor: #EB4468;
$textGradient: linear-gradient(99deg, #C824EC 0.07%, #DF308D 106.32%);
$btnBgGradient: linear-gradient(99deg, #BC3CD8 0.07%, #C54B8C 106.32%);
$experienceBgColor: #534686;
$primaryBgGradient: linear-gradient(rgb(170, 20, 240) -42.59%, rgba(0, 0, 0, .1) -42.59%, rgb(170, 20, 240) -42.58%, rgba(170, 20, 240, 0.18) 4.35%, rgba(151, 60, 68, 0.05) 99.99%, rgba(185, 54, 245, 0) 100%);
$cardBgGradient: linear-gradient(rgb(170, 20, 240) -42.59%, rgba(0, 0, 0, .1) -42.59%, rgb(203, 141, 232) -42.58%, rgba(203, 143, 232, 0.18) 4.35%, rgba(151, 60, 68, 0.05) 99.99%, rgba(199, 137, 228, 0) 100%);
;

// Mixins

@mixin adaptiv-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;

	@if $type==1 {
		// Только если меньше контейнера
		#{$property}: $startSize + px;

		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / (#{$maxWidthContainer - 320})));
		}
	}

	@else if $type==2 {
		// Только если больше контейнера
		#{$property}: $startSize + px;

		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / (#{$maxWidth - 320})));
		}
	}

	@else {
		// Всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / (#{$maxWidth - 320})));
	}
}